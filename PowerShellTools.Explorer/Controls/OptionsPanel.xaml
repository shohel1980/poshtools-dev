<UserControl x:Class="PowerShellTools.Explorer.OptionsPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             xmlns:local="clr-namespace:PowerShellTools.Explorer"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase">
    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="DialogDataGridStyle" TargetType="{x:Type DataGrid}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ThemeResources.WindowForeground}}" />
                <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
                <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="RowBackground" Value="Transparent" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
                <Setter Property="RowValidationErrorTemplate" Value="{x:Null}" />
            </Style>

            <Style x:Key="DataGridCellNoEditingStyle" TargetType="{x:Type DataGridCell}" >
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ThemeResources.WindowForeground}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="MinHeight" Value="18"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="2" />
                <Style.Resources>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="DataGridCellEditingStyle" TargetType="{x:Type DataGridCell}" >
                <!-- Without this, editable cells have two tabstops 
                (one for the cell, one for the editing control) -->
                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="MinHeight" Value="18"/>
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="2" />
                <Style.Resources>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                    </Style>
                </Style.Resources>
                <!-- Due to WPF bug(981654), when we tab out of data grid and tab back in, 
                the selected cell is not the same as cell in focus.
                So we need to clean up the borders for the selected cell by setting the border thickness to 0. 
                This will remove highlighting on the cell not in focus -->
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True"/>
                            <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderThickness" Value="0"></Setter>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="InLineTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static local:ThemeResources.DropDownBackground}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ThemeResources.WindowForeground}}" />
                <Setter Property="CaretBrush" Value="{DynamicResource {x:Static local:ThemeResources.WindowForeground}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ThemeResources.DropDownBorder}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="2" />
            </Style>

            <Style x:Key="InLineComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static local:ThemeResources.DropDownBackground}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ThemeResources.WindowForeground}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ThemeResources.DropDownBorder}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>

            <Style x:Key="InLineCheckBoxStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource CheckBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static local:ThemeResources.DropDownBackground}}" />
                <Setter Property="Foreground" Value="{DynamicResource {x:Static local:ThemeResources.WindowForeground}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static local:ThemeResources.DropDownBorder}}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Padding" Value="2" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <DataTemplate x:Key="BoolOptionValueTemplate">
                <CheckBox Style="{StaticResource InLineCheckBoxStyle}" 
                          IsChecked="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"
                          ToolTip="{Binding Path=HelpMessage, Mode=OneWay}" />
            </DataTemplate>

            <DataTemplate x:Key="ChoiceOptionValueTemplate">
                <ComboBox Style="{StaticResource InLineComboBoxStyle}"
                          SelectedValue="{Binding Path=Value, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Path=Choices}" 
                          ToolTip="{Binding Path=HelpMessage, Mode=OneWay}" />
            </DataTemplate>

            <CollectionViewSource x:Key="OptionsViewSource" Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="Caption" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <DataGrid Margin="15 5 5 5" 
                  BorderThickness="0"
                  AutoGenerateColumns="False"
                  HeadersVisibility="None"
                  SelectionUnit="Cell"
                  SelectionMode="Single"
                  Validation.ErrorTemplate="{x:Null}"
                  RowValidationErrorTemplate="{x:Null}"
                  Style="{StaticResource DialogDataGridStyle}"
                  DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=DataContext}"
                  ItemsSource="{Binding Source={StaticResource OptionsViewSource}}">
            <DataGrid.Resources>
                <local:BindingProxy x:Key="proxy" Data="{Binding}" />
            </DataGrid.Resources>
            <DataGrid.Background>
                <ImageBrush/>
            </DataGrid.Background>
            <DataGrid.Columns>
                <DataGridTemplateColumn CellStyle="{StaticResource DataGridCellNoEditingStyle}" 
                                        IsReadOnly="True"
                                        Width="Auto"
                                        MinWidth="100" 
                                        Validation.ErrorTemplate="{x:Null}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <TextBlock VerticalAlignment="Center">
                                    <Run Text="{Binding Path=Caption, Mode=OneWay}" />
                                    <Run Text=":" />
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn IsReadOnly="False"                                      
                                        MinWidth="100"
                                        Width="*"
                                        Validation.ErrorTemplate="{x:Null}"
                                        CellStyle="{StaticResource DataGridCellEditingStyle}">
                    <DataGridTemplateColumn.CellTemplateSelector>
                        <local:OptionTemplateSelector
                                        BoolTemplate="{StaticResource BoolOptionValueTemplate}"
                                        ChoiceTemplate="{StaticResource ChoiceOptionValueTemplate}" />
                    </DataGridTemplateColumn.CellTemplateSelector>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</UserControl>
